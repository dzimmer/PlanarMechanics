// Convert from PlanarMechanics 1.6.0 to PlanarMechanics 2.0.0 and higher

convertClear();

// Issue 189
// New element Modelica.Mechanics.MultiBody.Visualizers.Advanced.Vector
convertModifiers({"PlanarMechanics.Sources.RelativeForce",
                  "PlanarMechanics.Sources.WorldForce",
                  "PlanarMechanics.Sources.QuadraticSpeedDependentForce"},
                 {"diameter"}, fill("", 0), true);
convertModifiers({"PlanarMechanics.Sensors.CutForce",
                  "PlanarMechanics.Sensors.CutForceAndTorque"},
                 {"forceDiameter"}, fill("", 0), true);
convertModifiers({"PlanarMechanics.Sensors.CutTorque",
                  "PlanarMechanics.Sensors.CutForceAndTorque"},
                 {"torqueDiameter"}, fill("", 0), true);
// convertModifiers({"PlanarMechanics.Sensors.Distance"},
//                  {"arrowDiameter"}, fill("", 0), true);

// convertModifiers({"PlanarMechanics.Sources.RelativeForce",
//                   "PlanarMechanics.Sources.QuadraticSpeedDependentForce",
//                   "PlanarMechanics.Sources.WorldForce",
//                   "PlanarMechanics.Sensors.CutForce",
//                   "PlanarMechanics.Sensors.CutForceAndTorque"},
//                  {"N_to_m"}, fill("", 0), true);
// convertModifiers({"PlanarMechanics.Sources.RelativeForce",
//                   "PlanarMechanics.Sources.QuadraticSpeedDependentForce",
//                   "PlanarMechanics.Sources.WorldForce",
//                   "PlanarMechanics.Sensors.CutTorque",
//                   "PlanarMechanics.Sensors.CutForceAndTorque"},
//                  {"Nm_to_m"}, fill("", 0), true);

// convertClass("PlanarMechanics.Visualizers.Advanced.DoubleArrow",
//              "ObsoletePlanarMechanics2.Visualizers.Advanced.DoubleArrow")

// Issue 191
convertModifiers("PlanarMechanics.Sources.QuadraticSpeedDependentForce",
                  {"resolveInFrame=Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.world"},
                  {"resolveInFrame=if %resolveInFrame%==Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.frame_a then Modelica.Mechanics.MultiBody.Types.ResolveInFrameB.frame_b else if %resolveInFrame%==Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.world then Modelica.Mechanics.MultiBody.Types.ResolveInFrameB.world else Modelica.Mechanics.MultiBody.Types.ResolveInFrameB.frame_resolve"}, true);

// Issue 149
convertClass("PlanarMechanics.Utilities.Functions.atan3b",
             "Modelica.Math.atan3")
// No conversion for PlanarMechanics.Utilities.Functions.atan3b_der
// and               PlanarMechanics.Utilities.Functions.atan3b_dder
